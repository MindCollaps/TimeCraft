{{define "title"}}Time Craft{{end}}
{{define "metaDescription"}}Time Craft, your way of creating smart timetables{{end}}
{{define "content"}}
    {{template "topdoc"}}
    <div id="container" class="d-flex justify-content-center align-items-center w-100 vh-100">
        <div class="w-50 vh-50">
            <h1 class="mt-5">Upload Excel File</h1>
            <form id="uploadForm">
                <div class="form-group">
                    <label for="fileInput" class="mb-3">Choose file</label>
                    <input type="file" class="form-control" id="fileInput" name="file" required>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Upload</button>
            </form>
            <div class="loading mt-3 d-none" id="loading">
                <div class="spinner-border text-primary d-none" role="status">
                    <span class="sr-only"></span>
                </div>
                Importing timetable, please wait...
            </div>
            <div id="message" class="mt-3"></div>
        </div>
    </div>

    <script>
        document.getElementById('uploadForm').addEventListener('submit', function (event) {
            event.preventDefault();

            var formData = new FormData();
            var fileInput = document.getElementById('fileInput');
            formData.append('file', fileInput.files[0]);

            var loading = document.getElementById('loading');
            var message = document.getElementById('message');
            var spinner = document.querySelector('.spinner-border');

            // Show loading animation
            loading.style.display = 'block';
            loading.classList.remove('d-none');
            spinner.classList.remove('d-none');
            message.textContent = '';

            fetch('/api/v1/prt/import/excel', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    // Hide loading animation
                    loading.style.display = 'none';

                    if (response.ok) {
                        return response.text().then(data => {
                            var jsonData = JSON.parse(data);
                            message.textContent = 'File uploaded successfully! \n ' + jsonData.msg;
                            message.style.color = 'green';
                        });
                    } else if (response.status === 304) {
                        message.textContent = 'File already uploaded! TimeTable is up to date.';
                        message.style.color = 'orange';
                    } else {
                        return response.text().then(data => {
                            var jsonData = JSON.parse(data);
                            message.textContent = 'Import failed. Error: ' + jsonData.error;
                            message.style.color = 'red';
                        });
                    }
                    ;
                });
        });
    </script>

    {{template "botdoc"}}
{{end}}